name: 'build-lint-test'
description: 'build'
inputs:
  registry_url:
    required: true
  google_project_id:
    required: true
  linting_enabled:
    required: true
    default: true
  tests_enabled:
    required: true
    default: true
  tag1:
    required: true
  tag2:
    required: true
  tag3:
    required: true
  github_token:
    required: true
  environment:
    required: true
  image_name:
    required: true
  site:
    required: false
runs:
    using: "composite"
    steps:
      - name: Build the test Docker image
        if: ${{ inputs.tests_enabled == 'true' }}
        shell: bash
        run: docker build . --file Dockerfile.test --tag ${{ inputs.image_name }}-test --build-arg environment=${{ inputs.environment }} --build-arg site=${{ inputs.site }} --build-arg GH_PACKAGE_READ=${{ inputs.github_token }}

      - name: Generate coverage report
        if: ${{ inputs.tests_enabled == 'true' }}
        shell: bash
        run: mkdir /tmp/mount && docker create --name ${{ inputs.image_name }}-test ${{ inputs.image_name }}-test && docker container start ${{ inputs.image_name }}-test && docker cp ${{ inputs.image_name }}-test:/usr/src/app/coverage /tmp/mount/coverage

      - name: Adjust report file path
        if: ${{ inputs.tests_enabled == 'true' }}
        shell: bash
        run: PROJECT_ROOT=$(pwd) && cd /tmp/mount/coverage/ && sed -i "s|SF:/usr/src/app|SF:$PROJECT_ROOT|g" lcov.info

      - name: Report code coverage
        if: ${{ inputs.tests_enabled == 'true' }}
        uses: zgosalvez/github-actions-report-lcov@v1
        with:
          coverage-files: /tmp/mount/coverage/*.info
          minimum-coverage: 10
          artifact-name: code-coverage-report
          github-token: ${{ inputs.github_token }}

      - name: Delete test image
        if: ${{ inputs.tests_enabled == 'true' }}
        shell: bash
        run: docker rmi ${{ inputs.image_name }}-test -f

      - name: Build the tagged Docker image
        shell: bash
        run: docker build . --file Dockerfile --tag ${{ inputs.registry_url }}/${{ inputs.google_project_id }}/${{ inputs.image_name }}:${{ inputs.tag1 }} --tag ${{ inputs.registry_url }}/${{ inputs.google_project_id }}/${{ inputs.image_name }}:${{ inputs.tag2 }} --tag ${{ inputs.registry_url }}/${{ inputs.google_project_id }}/${{ inputs.image_name }}:${{ inputs.tag3 }} --build-arg environment=${{ inputs.environment }} --build-arg site=${{ inputs.site }} --build-arg GH_PACKAGE_READ=${{ inputs.github_token }}

